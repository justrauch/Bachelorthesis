import streamlit as st
from streamlit_image_select import image_select
from streamlit_scroll_to_top import scroll_to_here
import urllib.parse
import uuid
import requests

if "email_count" not in st.session_state:
    st.session_state.email_count = 0

if "seite" not in st.session_state:
    st.session_state.seite = "start"

if "auswahl" not in st.session_state:
   st.session_state.auswahl = {}

def wechsel_zu(seite):
    st.session_state.scroll_to_top = True
    st.session_state.seite = seite

if "reload_counter" not in st.session_state:
    st.session_state.reload_counter = 0

if 'scroll_to_top' not in st.session_state:
    st.session_state.scroll_to_top = False

if st.session_state.scroll_to_top:
    scroll_to_here(0, key='top')
    st.session_state.scroll_to_top = False

def scroll():
    st.session_state.scroll_to_top = True

text = (
    "The following pages will each present a short text along with an image that includes a textual description.\n"
    "You will first be asked whether this description meaningfully supports the topic, or if the image visually illustrates it well enough to be worth mentioning.\n"
    "This is followed by one or two tasks where you choose between multiple images.\n"
    "If you believe any of these new images better support the description or topic, please select it. "
    "If none of the options seem appropriate, select the first image (index 0).\n"
    "Please note: the descriptions are generated by an AI model, which may not reliably recognize people or buildings. "
    "Famous landmarks like the Eiffel Tower may be correctly identified, but regional or less-known locations often are not."
)

if st.session_state.seite == "start":
    st.title("Explanation")

    st.text("If the images are not displayed, please wait about 10 seconds and then click the “Reload” button. "
        "Important: Do not reload the browser, otherwise all previous selections will be lost!")
    if st.button("Reload"):
        st.session_state.reload_counter += 1
        st.rerun()

    st.markdown("## Example 1")
    st.text(
        "The following shows you some examples that illustrate "
        "how a selection can be made. "
        "These are only examples – no selection is required here."
    )
    st.text(
        "Habitat of Zebras\n"
        "Zebras typically live in open savannahs and grasslands of Africa. An important component\n"
        "of their habitat are waterholes, which they regularly visit in groups. It can be observed\n"
        "that zebras often drink together to protect each other from potential predators."    )

    img63 = image_select(
        "Selection:",
        [
            "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
            "https://www.dropbox.com/scl/fi/ty14z8nmr5mojx2kb7bs1/WahrZebradpa0109-1.jpeg?rlkey=0pny0fwpaj4v99nwh2xxm34ih&dl=1",
            "https://www.dropbox.com/scl/fi/ldwbtg1ncry13p5schtin/image3.jpg?rlkey=h922dml3kw584vqop2le71yo9&dl=1",
            "https://www.dropbox.com/scl/fi/yiz4ycibua9rb2naitgjw/Bsp1_Wahl.png?rlkey=fheswjjy98aajg6zboroqublo&dl=1",
        ],
        return_value="index",
        index=0,
        key=f"bsp_1_{st.session_state.reload_counter}"
    )

    st.text("Good choice:")
    bsp1_arr = [
        "https://www.dropbox.com/scl/fi/yiz4ycibua9rb2naitgjw/Bsp1_Wahl.png?rlkey=fheswjjy98aajg6zboroqublo&dl=1",
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
    ]
    bsp1_tmp = st.session_state.reload_counter % 2
    if bsp1_tmp == 0:
        st.image(bsp1_arr[0 if bsp1_tmp == 0 else 1])
    else:
        st.image(bsp1_arr[0 if bsp1_tmp == 1 else 1])
    st.text("This is the description for the image above:")
    st.text("Four zebras stand at the edge of a watering hole, with three of them drinking while their reflections are clearly visible in the calm water. The scene is set against a backdrop of dry grass and warm sunlight, evoking the African savanna.")

    st.text(       "Selection No. 4 is appropriate because the image very well illustrates the scene described in the text,\n"
       "in which several zebras drink together at a waterhole. It supports the depiction of the zebras\n"
       "typical habitat and highlights their social behavior while drinking.\n"
       "Image No. 3 fits the described scene less well because it shows zebras in motion rather than drinking.\n"
       "If selection No. 4 were not available, the best choice would be to select none of the shown images.\n"
    )

    st.button(f"Page 1", on_click=lambda s=f"page1": wechsel_zu(s))
    st.text("After completing all questions, please submit your results.")
    st.button("Submit Results", on_click=lambda: wechsel_zu("auswertung"))
    st.button("Scroll to top", on_click=scroll())

if st.session_state.seite == "page1":
    st.title("Page 1")
    st.text(text)

    pdf_url = "https://www.dropbox.com/scl/fi/c4ot3ris4xkgrz4vbgbow/40410000.pdf?rlkey=v7ex77n54ie5bix99rxpgk5id&dl=0"
    st.text("If the images are not displayed, please wait about 10 seconds and then click the 'Reload' button."
        "Important: Do not reload the browser, otherwise all previous selections will be lost!")
    if st.button("Reload"):
        st.session_state.reload_counter += 1
        st.rerun()
    st.text('Goal: Provide detailed information on the German Federal Parliament (Bundestag) during its 20th term, including its roles, structures, buildings, members, and election process.')

    st.markdown("## Question 1") 
    st.text(' Buildings housing the Bundestag\n- Overviews the history and architecture of several parliamentary buildings located in Berlin, including the iconic glass dome atop the Reichstag building.\n- Describes additional facilities built recently to accommodate increased membership due to changes in voting regulations.\n\n')
    choice14_arr = [
        "https://www.dropbox.com/scl/fi/vuwjs4ykjb471unkmeqbt/Section4_choice.png?rlkey=8qg3vzh374evc5rqidaz05m4h&dl=1",
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
    ]
    choice14_tmp = st.session_state.reload_counter % 2
    if choice14_tmp == 0:
        st.image(choice14_arr[0 if choice14_tmp == 0 else 1])
    else:
        st.image(choice14_arr[0 if choice14_tmp == 1 else 1])
    st.text("This is the description for the image above:")
    st.text(' An aerial view showcases a large, ornate building with a glass dome, surrounded by a park and a cityscape under a partly cloudy sky.')
    st.markdown(
        "<div style='font-size:18px; font-weight:bold;'>Does the description support the text when added with 'illustrated by', or is the image visually relevant enough to be mentioned on its own?</div>",
        unsafe_allow_html=True
    )
    antwort14 = st.radio(
         "",
         [
             "Yes – the description supports the topic and the image illustrates it well",
             "No – neither the description nor the image match the topic",
             "No – the description doesn't fit, but the image itself is interesting or relevant"
         ],
         key="antwort14",
         label_visibility="collapsed"
     )
    st.session_state.auswahl["Page 1 Question 1"] = antwort14

    st.markdown("## Question 2") 
    st.text("Think of each image as a one- or two-sentence visual description. As in Question 1, would any of these descriptions fit the text if introduced with 'illustrated by'? If none of the images are appropriate, select the first one (index 0).") 
    tmp14 = [
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
        "https://www.dropbox.com/scl/fi/by8bhno9vrpw4muuhnldq/Section4_Bild2.png?rlkey=vgofwjggqzaunkwhe1f8oohrx&dl=1",
        "https://www.dropbox.com/scl/fi/71r3l8fmblmidfert71r2/Section4_Bild0.png?rlkey=o1n8pcotadjr6kss85t8bkagw&dl=1",
        "https://www.dropbox.com/scl/fi/waj29s71quim2c7qox7ci/Section4_Bild1.png?rlkey=ety1m1rikukc5f3dus0ycxd3e&dl=1",
    ]
    img14 = image_select(
        "Select the most appropriate image:",
        tmp14,
        return_value="index",
        index=st.session_state.auswahl.get("Page 1 Question 2", 0),
        key=f"frage14_{st.session_state.reload_counter}"
    )
    st.session_state.auswahl["Page 1 Question 2"] = img14
    valid14_tmp = st.session_state.reload_counter % 2
    if valid14_tmp == 0:
        st.image(tmp14[st.session_state.auswahl.get("Page 1 Question 2", 0)] if valid14_tmp == 0 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    else:
        st.image(tmp14[st.session_state.auswahl.get("Page 1 Question 2", 0)] if valid14_tmp == 1 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    st.text_input("Selected image", value=st.session_state.auswahl["Page 1 Question 2"], key="wv14", disabled=True)
    st.markdown('## Comment on Page 1')
    if 'Page 1 comments' not in st.session_state.auswahl:
        st.session_state.auswahl['Page 1 comments'] = ''
    st.session_state.auswahl['Page 1 comments'] = st.text_input(
        'Please provide a short justification for your choice (ideally in German):',
        value=st.session_state.auswahl['Page 1 comments']
    )
    st.text("You can now continue to the next questions.")
    st.button("(Next) Page 2", on_click=lambda: wechsel_zu("page2"))

    with st.container():
        cols = st.columns([2] * 6)
        fragen = [3, 4, 5, 6]
        for i, frage in enumerate(fragen):
            cols[i].button(f"Page {frage}", on_click=lambda s=f"page{frage}": wechsel_zu(s))

    st.text("After completing all questions, please submit your results.")
    st.button("Submit Results", on_click=lambda: wechsel_zu("auswertung"))

    st.text("Return to the starting explanation page here.")
    st.button("Explanation", on_click=lambda: wechsel_zu("start"))

    st.button("Scroll to top", on_click=scroll)

if st.session_state.seite == "page2":
    st.title("Page 2")
    st.text(text)

    pdf_url = "https://www.dropbox.com/scl/fi/mqg9sdpiykcvbye7ohjdv/Probe345Bd93.pdf?rlkey=72qar9s8kggg9pkvjx2laurth&dl=0"
    st.text("If the images are not displayed, please wait about 10 seconds and then click the 'Reload' button."
        "Important: Do not reload the browser, otherwise all previous selections will be lost!")
    if st.button("Reload"):
        st.session_state.reload_counter += 1
        st.rerun()
    st.text('Goal: Discuss the history, characteristics, distribution, threats, conservation efforts, and educational programs regarding dinosaurs.')

    st.markdown("## Question 1") 
    st.text(' Origin and Dominance of Dinosaurs\n- Details how dinosaurs evolved around 225 million years ago during the Triassic Period; explains why they dominated land ecosystems until their extinction approximately 65 million years ago.\n\n')
    choice21_arr = [
        "https://www.dropbox.com/scl/fi/rrt8u8qw3ylaos4d3rehr/Section1_choice.png?rlkey=5uxlb2kquf4uczxwo8o7j2zof&dl=1",
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
    ]
    choice21_tmp = st.session_state.reload_counter % 2
    if choice21_tmp == 0:
        st.image(choice21_arr[0 if choice21_tmp == 0 else 1])
    else:
        st.image(choice21_arr[0 if choice21_tmp == 1 else 1])
    st.text("This is the description for the image above:")
    st.text(' A colorful illustration depicts a map of Earth approximately 225 million years ago, showing the arrangement of continents like Asia, Africa, South America, India, Australia, and Antartica surrounded by oceans and labeled with geological features.')
    st.markdown(
        "<div style='font-size:18px; font-weight:bold;'>Does the description support the text when added with 'illustrated by', or is the image visually relevant enough to be mentioned on its own?</div>",
        unsafe_allow_html=True
    )
    antwort21 = st.radio(
         "",
         [
             "Yes – the description supports the topic and the image illustrates it well",
             "No – neither the description nor the image match the topic",
             "No – the description doesn't fit, but the image itself is interesting or relevant"
         ],
         key="antwort21",
         label_visibility="collapsed"
     )
    st.session_state.auswahl["Page 2 Question 1"] = antwort21

    st.markdown("## Question 2") 
    st.text("Think of each image as a one- or two-sentence visual description. As in Question 1, would any of these descriptions fit the text if introduced with 'illustrated by'? If none of the images are appropriate, select the first one (index 0).") 
    tmp21 = [
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
        "https://www.dropbox.com/scl/fi/kouvvc8o0wpikpmag5hsa/Section1_Bild0.png?rlkey=f8sc7vrcnjo5m3pbhilbwnpvi&dl=1",
        "https://www.dropbox.com/scl/fi/d8m5kz02kbflrm2285kj2/Section1_Bild6.png?rlkey=pml89r7lpczla3dauu20s7pwm&dl=1",
        "https://www.dropbox.com/scl/fi/v3vi2xp8ds4idoj5n0kyt/Section1_Bild2.png?rlkey=c5205waa41msaabfbf5stfmkg&dl=1",
        "https://www.dropbox.com/scl/fi/4b2rs338wcksqg35cbva6/Section1_Bild5.png?rlkey=w5c9ol53h35da0jjrs53sm0ci&dl=1",
        "https://www.dropbox.com/scl/fi/lhgxw39vbrm4zrlno1wrl/Section1_Bild4.png?rlkey=cuihdo31wuh8uzgp5ygq37ixy&dl=1",
        "https://www.dropbox.com/scl/fi/d0qeb7l4o9a06vt780ya9/Section1_Bild1.png?rlkey=p170cm8oj3ef187rqpitjgrke&dl=1",
        "https://www.dropbox.com/scl/fi/tb6bacqzkj0dej3389ar8/Section1_Bild3.png?rlkey=4kmo9kqwfpby1r1lp3ng4jw4x&dl=1",
    ]
    img21 = image_select(
        "Select the most appropriate image:",
        tmp21,
        return_value="index",
        index=st.session_state.auswahl.get("Page 2 Question 2", 0),
        key=f"frage21_{st.session_state.reload_counter}"
    )
    st.session_state.auswahl["Page 2 Question 2"] = img21
    valid21_tmp = st.session_state.reload_counter % 2
    if valid21_tmp == 0:
        st.image(tmp21[st.session_state.auswahl.get("Page 2 Question 2", 0)] if valid21_tmp == 0 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    else:
        st.image(tmp21[st.session_state.auswahl.get("Page 2 Question 2", 0)] if valid21_tmp == 1 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    st.text_input("Selected image", value=st.session_state.auswahl["Page 2 Question 2"], key="wv21", disabled=True)
    st.markdown('## Comment on Page 2')
    if 'Page 2 comments' not in st.session_state.auswahl:
        st.session_state.auswahl['Page 2 comments'] = ''
    st.session_state.auswahl['Page 2 comments'] = st.text_input(
        'Please provide a short justification for your choice (ideally in German):',
        value=st.session_state.auswahl['Page 2 comments']
    )
    st.text("You can now continue to the next questions.")
    st.button("(Next) Page 3", on_click=lambda: wechsel_zu("page3"))

    with st.container():
        cols = st.columns([2] * 6)
        fragen = [1, 4, 5, 6]
        for i, frage in enumerate(fragen):
            cols[i].button(f"Page {frage}", on_click=lambda s=f"page{frage}": wechsel_zu(s))

    st.text("After completing all questions, please submit your results.")
    st.button("Submit Results", on_click=lambda: wechsel_zu("auswertung"))

    st.text("Return to the starting explanation page here.")
    st.button("Explanation", on_click=lambda: wechsel_zu("start"))

    st.button("Scroll to top", on_click=scroll)

if st.session_state.seite == "page3":
    st.title("Page 3")
    st.text(text)

    pdf_url = "https://www.dropbox.com/scl/fi/mqg9sdpiykcvbye7ohjdv/Probe345Bd93.pdf?rlkey=72qar9s8kggg9pkvjx2laurth&dl=0"
    st.text("If the images are not displayed, please wait about 10 seconds and then click the 'Reload' button."
        "Important: Do not reload the browser, otherwise all previous selections will be lost!")
    if st.button("Reload"):
        st.session_state.reload_counter += 1
        st.rerun()
    st.text('Goal: Discuss the history, characteristics, distribution, threats, conservation efforts, and educational programs regarding dinosaurs.')

    st.markdown("## Question 1") 
    st.text(' Climate Changes and Global Catastrophe\n- Elaborates on changes in climate throughout the Mesozoic Era leading up to the End-Cretaceous Event; discusses theories suggesting a meteorite collision and volcanic activity contributed to the mass extinction of dinosaurs.\n\n')
    choice33_arr = [
        "https://www.dropbox.com/scl/fi/l5w6xl6ln1l8h50r25si0/Section3_choice.png?rlkey=wfr2wmqkiybxg5wyy9kj2dcj2&dl=1",
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
    ]
    choice33_tmp = st.session_state.reload_counter % 2
    if choice33_tmp == 0:
        st.image(choice33_arr[0 if choice33_tmp == 0 else 1])
    else:
        st.image(choice33_arr[0 if choice33_tmp == 1 else 1])
    st.text("This is the description for the image above:")
    st.text(' The image shows a depiction of an asteroid impacting Earth on the left, alongside a map of the Yucatan Peninsula in Mexico and Belize highlighting the Chicxulub crater and the location of San Antonio on the right.')
    st.markdown(
        "<div style='font-size:18px; font-weight:bold;'>Does the description support the text when added with 'illustrated by', or is the image visually relevant enough to be mentioned on its own?</div>",
        unsafe_allow_html=True
    )
    antwort33 = st.radio(
         "",
         [
             "Yes – the description supports the topic and the image illustrates it well",
             "No – neither the description nor the image match the topic",
             "No – the description doesn't fit, but the image itself is interesting or relevant"
         ],
         key="antwort33",
         label_visibility="collapsed"
     )
    st.session_state.auswahl["Page 3 Question 1"] = antwort33

    st.markdown("## Question 2") 
    st.text("Think of each image as a one- or two-sentence visual description. As in Question 1, would any of these descriptions fit the text if introduced with 'illustrated by'? If none of the images are appropriate, select the first one (index 0).") 
    tmp33 = [
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
        "https://www.dropbox.com/scl/fi/u16x688q6y09khzbyi7yl/Section3_Bild5.png?rlkey=as5y0wufq1erx2z68tccpr35p&dl=1",
        "https://www.dropbox.com/scl/fi/bkyhddqxn48bin3nxjbxm/Section3_Bild9.png?rlkey=7h0npxrruxkc767fj3des0tms&dl=1",
        "https://www.dropbox.com/scl/fi/m3su5pfvzjsamwyytsoaw/Section3_Bild1.png?rlkey=jb0spl7y2mr36ryq9m1c6qnmw&dl=1",
        "https://www.dropbox.com/scl/fi/9wcs3f9h4r011e7vzmg08/Section3_Bild0.png?rlkey=46amdhwj5nbefs8s7jf47p7vb&dl=1",
        "https://www.dropbox.com/scl/fi/u2bbhm0g2qlt23bbzysu0/Section3_Bild4.png?rlkey=d42lm6rm0e65fo2h2uxkq8i1k&dl=1",
        "https://www.dropbox.com/scl/fi/z8524hjo5eftmngy2n1xs/Section3_Bild6.png?rlkey=dga2ncu0v5mfdkd0ym9uizxfv&dl=1",
        "https://www.dropbox.com/scl/fi/o8cjdavgaxfwgmsc95419/Section3_Bild7.png?rlkey=hgmb7a0z61iuuxjyvj42urocz&dl=1",
        "https://www.dropbox.com/scl/fi/foau6fur198pzvvhwkzly/Section3_Bild2.png?rlkey=a8btaxbimi4tcduz838g0emnd&dl=1",
        "https://www.dropbox.com/scl/fi/op0neayma64d3l07jj6xk/Section3_Bild8.png?rlkey=toy8dgwavfd7u85mhdga0t2vl&dl=1",
        "https://www.dropbox.com/scl/fi/3ikivxkzwdq7juzn9x0li/Section3_Bild3.png?rlkey=80x5hjichr680jjsab8oyfkzl&dl=1",
        "https://www.dropbox.com/scl/fi/ffn7bp3vcuwcehe7af48x/Platzhalter.png?rlkey=jwud0umcxbw973lfjkchu1c6d&dl=1",
    ]
    img33 = image_select(
        "Select the most appropriate image:",
        tmp33,
        return_value="index",
        index=st.session_state.auswahl.get("Page 3 Question 2", 0),
        key=f"frage33_{st.session_state.reload_counter}"
    )
    st.session_state.auswahl["Page 3 Question 2"] = img33
    valid33_tmp = st.session_state.reload_counter % 2
    if valid33_tmp == 0:
        st.image(tmp33[st.session_state.auswahl.get("Page 3 Question 2", 0)] if valid33_tmp == 0 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    else:
        st.image(tmp33[st.session_state.auswahl.get("Page 3 Question 2", 0)] if valid33_tmp == 1 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    st.text_input("Selected image", value=st.session_state.auswahl["Page 3 Question 2"], key="wv33", disabled=True)
    st.markdown('## Comment on Page 3')
    if 'Page 3 comments' not in st.session_state.auswahl:
        st.session_state.auswahl['Page 3 comments'] = ''
    st.session_state.auswahl['Page 3 comments'] = st.text_input(
        'Please provide a short justification for your choice (ideally in German):',
        value=st.session_state.auswahl['Page 3 comments']
    )
    st.text("You can now continue to the next questions.")
    st.button("(Next) Page 4", on_click=lambda: wechsel_zu("page4"))

    with st.container():
        cols = st.columns([2] * 6)
        fragen = [1, 2, 5, 6]
        for i, frage in enumerate(fragen):
            cols[i].button(f"Page {frage}", on_click=lambda s=f"page{frage}": wechsel_zu(s))

    st.text("After completing all questions, please submit your results.")
    st.button("Submit Results", on_click=lambda: wechsel_zu("auswertung"))

    st.text("Return to the starting explanation page here.")
    st.button("Explanation", on_click=lambda: wechsel_zu("start"))

    st.button("Scroll to top", on_click=scroll)

if st.session_state.seite == "page4":
    st.title("Page 4")
    st.text(text)

    pdf_url = "https://www.dropbox.com/scl/fi/wqkfgzdig35g0yo9neupf/Broschuere_2013_hires.pdf?rlkey=ewrhf2r8xtgke9ux3in0l3p95&dl=0"
    st.text("If the images are not displayed, please wait about 10 seconds and then click the 'Reload' button."
        "Important: Do not reload the browser, otherwise all previous selections will be lost!")
    if st.button("Reload"):
        st.session_state.reload_counter += 1
        st.rerun()
    st.text('Goal: Understand the exploration of our solar system, focusing on significant findings related to planets, moons, asteroids, comets, and dwarf planets.')

    st.markdown("## Question 1") 
    st.text(' Key Findings About Inner & Outer Planets\n- Presents fundamental facts about terrestrial and gas giants, emphasizing their size, compositions, rotations, distances from the sun, and distinctive features like the Great Red Spot and Hexagon storm on Jupiter.\n\n')
    choice41_arr = [
        "https://www.dropbox.com/scl/fi/bxsl0059xbo6puplv4pic/Section1_choice.png?rlkey=bqdxmso4bpvzg0gl4n7hw7co1&dl=1",
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
    ]
    choice41_tmp = st.session_state.reload_counter % 2
    if choice41_tmp == 0:
        st.image(choice41_arr[0 if choice41_tmp == 0 else 1])
    else:
        st.image(choice41_arr[0 if choice41_tmp == 1 else 1])
    st.text("This is the description for the image above:")
    st.text(' The image depicts a vibrant illustration of the solar system with planets orbiting a bright sun, set against a backdrop of a swirling galaxy and distant stars.')
    st.markdown(
        "<div style='font-size:18px; font-weight:bold;'>Does the description support the text when added with 'illustrated by', or is the image visually relevant enough to be mentioned on its own?</div>",
        unsafe_allow_html=True
    )
    antwort41 = st.radio(
         "",
         [
             "Yes – the description supports the topic and the image illustrates it well",
             "No – neither the description nor the image match the topic",
             "No – the description doesn't fit, but the image itself is interesting or relevant"
         ],
         key="antwort41",
         label_visibility="collapsed"
     )
    st.session_state.auswahl["Page 4 Question 1"] = antwort41

    st.markdown("## Question 2") 
    st.text("Think of each image as a one- or two-sentence visual description. As in Question 1, would any of these descriptions fit the text if introduced with 'illustrated by'? If none of the images are appropriate, select the first one (index 0).") 
    tmp41 = [
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
        "https://www.dropbox.com/scl/fi/r1s9w46sc84fd7xcdxqbx/Section1_Bild0.png?rlkey=u0fikgjx2zp1fuhysg7gom9mi&dl=1",
        "https://www.dropbox.com/scl/fi/aeubhasa0ktv9faf4gay0/Section1_Bild2.png?rlkey=tplpy5br06l26b5mip2edgb55&dl=1",
        "https://www.dropbox.com/scl/fi/1uyexuh3f8f9vp23j7g0w/Section1_Bild1.png?rlkey=wj6vdwgm60iguuapb0si25p5w&dl=1",
    ]
    img41 = image_select(
        "Select the most appropriate image:",
        tmp41,
        return_value="index",
        index=st.session_state.auswahl.get("Page 4 Question 2", 0),
        key=f"frage41_{st.session_state.reload_counter}"
    )
    st.session_state.auswahl["Page 4 Question 2"] = img41
    valid41_tmp = st.session_state.reload_counter % 2
    if valid41_tmp == 0:
        st.image(tmp41[st.session_state.auswahl.get("Page 4 Question 2", 0)] if valid41_tmp == 0 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    else:
        st.image(tmp41[st.session_state.auswahl.get("Page 4 Question 2", 0)] if valid41_tmp == 1 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    st.text_input("Selected image", value=st.session_state.auswahl["Page 4 Question 2"], key="wv41", disabled=True)
    st.markdown('## Comment on Page 4')
    if 'Page 4 comments' not in st.session_state.auswahl:
        st.session_state.auswahl['Page 4 comments'] = ''
    st.session_state.auswahl['Page 4 comments'] = st.text_input(
        'Please provide a short justification for your choice (ideally in German):',
        value=st.session_state.auswahl['Page 4 comments']
    )
    st.text("You can now continue to the next questions.")
    st.button("(Next) Page 5", on_click=lambda: wechsel_zu("page5"))

    with st.container():
        cols = st.columns([2] * 6)
        fragen = [1, 2, 3, 6]
        for i, frage in enumerate(fragen):
            cols[i].button(f"Page {frage}", on_click=lambda s=f"page{frage}": wechsel_zu(s))

    st.text("After completing all questions, please submit your results.")
    st.button("Submit Results", on_click=lambda: wechsel_zu("auswertung"))

    st.text("Return to the starting explanation page here.")
    st.button("Explanation", on_click=lambda: wechsel_zu("start"))

    st.button("Scroll to top", on_click=scroll)

if st.session_state.seite == "page5":
    st.title("Page 5")
    st.text(text)

    pdf_url = "https://www.dropbox.com/scl/fi/dl7xr4edcjqye3xdx0nux/Menschenaffen_Unterrichtsmaterial.pdf?rlkey=lzkwispw171pcc5bpwtovn8ne&dl=0"
    st.text("If the images are not displayed, please wait about 10 seconds and then click the 'Reload' button."
        "Important: Do not reload the browser, otherwise all previous selections will be lost!")
    if st.button("Reload"):
        st.session_state.reload_counter += 1
        st.rerun()
    st.text('Goal: Provide educational resources for teachers to facilitate learning about great apes through various subjects like German language, Biology, Social Studies, Geography, and Arts.')

    st.markdown("## Question 1") 
    st.text(' About WWF\'s Youth Education Program "Young Panda"\n- Details the goals and objectives of the youth education initiative aimed at children aged 8-14 years old.\n\n')
    choice52_arr = [
        "https://www.dropbox.com/scl/fi/24c6c3q5816z4m7c2gytf/Section2_choice.png?rlkey=ksp2wbdlxhcrq1gthaqgply7r&dl=1",
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
    ]
    choice52_tmp = st.session_state.reload_counter % 2
    if choice52_tmp == 0:
        st.image(choice52_arr[0 if choice52_tmp == 0 else 1])
    else:
        st.image(choice52_arr[0 if choice52_tmp == 1 else 1])
    st.text("This is the description for the image above:")
    st.text(' A man in a blue jacket and black hat is pointing at a moss-covered log while a group of children wearing backpacks look on in a wooded area.')
    st.markdown(
        "<div style='font-size:18px; font-weight:bold;'>Does the description support the text when added with 'illustrated by', or is the image visually relevant enough to be mentioned on its own?</div>",
        unsafe_allow_html=True
    )
    antwort52 = st.radio(
         "",
         [
             "Yes – the description supports the topic and the image illustrates it well",
             "No – neither the description nor the image match the topic",
             "No – the description doesn't fit, but the image itself is interesting or relevant"
         ],
         key="antwort52",
         label_visibility="collapsed"
     )
    st.session_state.auswahl["Page 5 Question 1"] = antwort52

    st.markdown("## Question 2") 
    st.text("Think of each image as a one- or two-sentence visual description. As in Question 1, would any of these descriptions fit the text if introduced with 'illustrated by'? If none of the images are appropriate, select the first one (index 0).") 
    tmp52 = [
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
        "https://www.dropbox.com/scl/fi/xiaky9xm71j0ykzsfi6ej/Section2_Bild3.png?rlkey=il35b5uk54wgu5egmcutz7rbe&dl=1",
        "https://www.dropbox.com/scl/fi/9r397roisca37gvgx3rcx/Section2_Bild2.png?rlkey=3rcdl9wxmnxao4agzcriq0yeo&dl=1",
        "https://www.dropbox.com/scl/fi/hs32a89h00g4lcas626um/Section2_Bild6.png?rlkey=zjbtpzgnd1qc2ssezeyo3g0ht&dl=1",
        "https://www.dropbox.com/scl/fi/y5nke1j5fkh2qvc8evlal/Section2_Bild4.png?rlkey=5klt1kn39b20sinh4agfvbt6r&dl=1",
        "https://www.dropbox.com/scl/fi/t55pqpz6sg95mufrdwdv2/Section2_Bild5.png?rlkey=ac881etgr7zxaluo92k98lceo&dl=1",
        "https://www.dropbox.com/scl/fi/ffn7bp3vcuwcehe7af48x/Platzhalter.png?rlkey=jwud0umcxbw973lfjkchu1c6d&dl=1",
        "https://www.dropbox.com/scl/fi/ffn7bp3vcuwcehe7af48x/Platzhalter.png?rlkey=jwud0umcxbw973lfjkchu1c6d&dl=1",
    ]
    img52 = image_select(
        "Select the most appropriate image:",
        tmp52,
        return_value="index",
        index=st.session_state.auswahl.get("Page 5 Question 2", 0),
        key=f"frage52_{st.session_state.reload_counter}"
    )
    st.session_state.auswahl["Page 5 Question 2"] = img52
    valid52_tmp = st.session_state.reload_counter % 2
    if valid52_tmp == 0:
        st.image(tmp52[st.session_state.auswahl.get("Page 5 Question 2", 0)] if valid52_tmp == 0 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    else:
        st.image(tmp52[st.session_state.auswahl.get("Page 5 Question 2", 0)] if valid52_tmp == 1 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    st.text_input("Selected image", value=st.session_state.auswahl["Page 5 Question 2"], key="wv52", disabled=True)
    st.markdown('## Comment on Page 5')
    if 'Page 5 comments' not in st.session_state.auswahl:
        st.session_state.auswahl['Page 5 comments'] = ''
    st.session_state.auswahl['Page 5 comments'] = st.text_input(
        'Please provide a short justification for your choice (ideally in German):',
        value=st.session_state.auswahl['Page 5 comments']
    )
    st.text("You can now continue to the next questions.")
    st.button("(Next) Page 6", on_click=lambda: wechsel_zu("page6"))

    with st.container():
        cols = st.columns([2] * 6)
        fragen = [1, 2, 3, 4]
        for i, frage in enumerate(fragen):
            cols[i].button(f"Page {frage}", on_click=lambda s=f"page{frage}": wechsel_zu(s))

    st.text("After completing all questions, please submit your results.")
    st.button("Submit Results", on_click=lambda: wechsel_zu("auswertung"))

    st.text("Return to the starting explanation page here.")
    st.button("Explanation", on_click=lambda: wechsel_zu("start"))

    st.button("Scroll to top", on_click=scroll)

if st.session_state.seite == "page6":
    st.title("Page 6")
    st.text(text)

    pdf_url = "https://www.dropbox.com/scl/fi/x0ug7u457t0agaoh9gz2d/bdw_2022-006_96_Schwarze-Loecher-erschuettern-das-All.pdf?rlkey=ln77357z0hins7bialfdpbbfb&dl=0"
    st.text("If the images are not displayed, please wait about 10 seconds and then click the 'Reload' button."
        "Important: Do not reload the browser, otherwise all previous selections will be lost!")
    if st.button("Reload"):
        st.session_state.reload_counter += 1
        st.rerun()
    st.text('Goal: Describe recent discoveries made through the detection of gravitational waves caused by colliding black holes.')

    st.markdown("## Question 1") 
    st.text(' First Direct Observation of Merged Black Holes\n- On May 21, 2019, scientists detected gravitational waves originating from the merger of two massive black holes approximately 8 billion light years away. This marked the first direct observation of this phenomenon.\n\n')
    choice61_arr = [
        "https://www.dropbox.com/scl/fi/73i9its0wtcfbj2nodtlv/Section1_choice.png?rlkey=ald5l08fkx9td24a12i6ept6r&dl=1",
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
    ]
    choice61_tmp = st.session_state.reload_counter % 2
    if choice61_tmp == 0:
        st.image(choice61_arr[0 if choice61_tmp == 0 else 1])
    else:
        st.image(choice61_arr[0 if choice61_tmp == 1 else 1])
    st.text("This is the description for the image above:")
    st.text(' The image depicts two black holes surrounded by swirling blue light and a grid-like pattern against a backdrop of numerous stars.')
    st.markdown(
        "<div style='font-size:18px; font-weight:bold;'>Does the description support the text when added with 'illustrated by', or is the image visually relevant enough to be mentioned on its own?</div>",
        unsafe_allow_html=True
    )
    antwort61 = st.radio(
         "",
         [
             "Yes – the description supports the topic and the image illustrates it well",
             "No – neither the description nor the image match the topic",
             "No – the description doesn't fit, but the image itself is interesting or relevant"
         ],
         key="antwort61",
         label_visibility="collapsed"
     )
    st.session_state.auswahl["Page 6 Question 1"] = antwort61

    st.markdown("## Question 2") 
    st.text("Think of each image as a one- or two-sentence visual description. As in Question 1, would any of these descriptions fit the text if introduced with 'illustrated by'? If none of the images are appropriate, select the first one (index 0).") 
    tmp61 = [
        "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1",
        "https://www.dropbox.com/scl/fi/ivnnerv0b665kjym04zoc/Section1_Bild0.png?rlkey=etow49rztsgo0b4n0o8w6nbwn&dl=1",
        "https://www.dropbox.com/scl/fi/yzon7j8ms8yxxv4fmsn0k/Section1_Bild2.png?rlkey=svs5cue54jf42rw35lsgtbdac&dl=1",
        "https://www.dropbox.com/scl/fi/8o95xn80i8ts2t6ltl2c2/Section1_Bild5.png?rlkey=p0kd5fnrlvy4xq964ol1sjgs4&dl=1",
        "https://www.dropbox.com/scl/fi/fvvigaz594fr57ttmsl0e/Section1_Bild4.png?rlkey=4gefa4f3kk34rk1onp248gcsj&dl=1",
        "https://www.dropbox.com/scl/fi/ypf2bqvwab4ymncrqq5wt/Section1_Bild1.png?rlkey=d1ra0cbzz7h0jxeho2drm72mq&dl=1",
        "https://www.dropbox.com/scl/fi/tgkl0wi5ri1ic0gcc6w9t/Section1_Bild3.png?rlkey=yie6nb51qaiwrokrq8rbyktdn&dl=1",
        "https://www.dropbox.com/scl/fi/ffn7bp3vcuwcehe7af48x/Platzhalter.png?rlkey=jwud0umcxbw973lfjkchu1c6d&dl=1",
    ]
    img61 = image_select(
        "Select the most appropriate image:",
        tmp61,
        return_value="index",
        index=st.session_state.auswahl.get("Page 6 Question 2", 0),
        key=f"frage61_{st.session_state.reload_counter}"
    )
    st.session_state.auswahl["Page 6 Question 2"] = img61
    valid61_tmp = st.session_state.reload_counter % 2
    if valid61_tmp == 0:
        st.image(tmp61[st.session_state.auswahl.get("Page 6 Question 2", 0)] if valid61_tmp == 0 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    else:
        st.image(tmp61[st.session_state.auswahl.get("Page 6 Question 2", 0)] if valid61_tmp == 1 else "https://www.dropbox.com/scl/fi/8zxrgtciju3a5s6g6re94/bad-sets-komponenten-keine-auswahl.jpg?rlkey=ij0j741l44g5o6p4wz2y8gy0l&dl=1")
    st.text_input("Selected image", value=st.session_state.auswahl["Page 6 Question 2"], key="wv61", disabled=True)
    st.markdown('## Comment on Page 6')
    if 'Page 6 comments' not in st.session_state.auswahl:
        st.session_state.auswahl['Page 6 comments'] = ''
    st.session_state.auswahl['Page 6 comments'] = st.text_input(
        'Please provide a short justification for your choice (ideally in German):',
        value=st.session_state.auswahl['Page 6 comments']
    )
    st.text("You can now continue to the next questions.")
    with st.container():
        cols = st.columns([2] * 6)
        fragen = [1, 2, 3, 4, 5]
        for i, frage in enumerate(fragen):
            cols[i].button(f"Page {frage}", on_click=lambda s=f"page{frage}": wechsel_zu(s))

    st.text("After completing all questions, please submit your results.")
    st.button("Submit Results", on_click=lambda: wechsel_zu("auswertung"))

    st.text("Return to the starting explanation page here.")
    st.button("Explanation", on_click=lambda: wechsel_zu("start"))

    st.button("Scroll to top", on_click=scroll)

elif st.session_state.seite == "auswertung":
    st.title("Evaluation")
    st.write("You have selected the following images:")

    results_text = ""

    for key, value in sorted(st.session_state.auswahl.items()):
        results_text += f"{key} → {value}\n"

    st.text(results_text.strip())

    if st.button("Submit via Web Form (Formspree)"):
        full_message = results_text.strip()

        response = requests.post(
            "https://formspree.io/f/mkgzggle",
            data={"message": full_message},
            headers={"Content-Type": "application/x-www-form-urlencoded"}
        )
        if response.status_code == 200:
            st.success("Thank you for your feedback!")
        else:
            st.error("Error while sending. Please try again later.")

    st.markdown("---")

    encoded_body = urllib.parse.quote(results_text)
    mailto_link = f"mailto:jstrauch@pagemachine.de?subject=Image Survey&body={encoded_body}"

    if st.button("Alternatively, send via Email"):
        dummy_id = uuid.uuid4()
        js_code = f"""
        const dummy = \"{dummy_id}\"; 
        window.open(\"{mailto_link}\");
        """
        st.components.v1.html(f"<script>{js_code}</script>", height=0)

    st.info("If no email window opens, please enable pop-ups in your browser. "
            "Alternatively, copy the results manually and send them to jstrauch@pagemachine.de.")

    st.button("Back to Start", on_click=lambda: wechsel_zu("start"))
